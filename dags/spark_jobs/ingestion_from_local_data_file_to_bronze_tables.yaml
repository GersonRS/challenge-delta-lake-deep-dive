apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: ingestion-from-local-data-file-to-bronze-tables
  namespace: processing
spec:
  type: Python
  mode: cluster
  image: "spark:0.1"
  imagePullPolicy: IfNotPresent
  mainApplicationFile: "local:///app/ingestion_to_bronze.py"
  sparkVersion: "3.3.2"
  restartPolicy:
    type: OnFailure
    onFailureRetries: 1
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  hadoopConf:
    fs.s3a.endpoint: "http://minio.deepstorage.svc.cluster.local:9000"
    fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
    fs.s3a.path.style.access: "True"
    fs.s3a.connection.ssl.enabled: "false"
    fs.s3a.fast.upload: "true"
    fs.s3a.aws.credentials.provider: "com.amazonaws.auth.EnvironmentVariableCredentialsProvider"
  sparkConf:
    spark.delta.logStore.class: "org.apache.spark.sql.delta.storage.S3SingleDriverLogStore"
    spark.sql.extensions: "io.delta.sql.DeltaSparkSessionExtension"
    spark.sql.catalog.spark_catalog: "org.apache.spark.sql.delta.catalog.DeltaCatalog"
  driver:
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:
        name: minio-secrets
        key: root-user
      AWS_SECRET_ACCESS_KEY:
        name: minio-secrets
        key: root-password
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.3.2
    serviceAccount: default
  executor:
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:
        name: minio-secrets
        key: root-user
      AWS_SECRET_ACCESS_KEY:
        name: minio-secrets
        key: root-password
    cores: 1
    instances: 3
    memory: "512m"
    labels:
      version: 3.3.2
    serviceAccount: default